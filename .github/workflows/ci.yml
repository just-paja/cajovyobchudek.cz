---
name: Continuous integration
on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: dschep/install-pipenv-action@v1
      - uses: ./.github/actions/setup-ci
      - name: Test
        run: pipenv run pytest --cov-report=xml --cov-config=.coveragerc --cov="."

  analyze:
    name: Run static code analysis
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: dschep/install-pipenv-action@v1
      - uses: ./.github/actions/setup-ci
      - name: Static code analysis
        run: pipenv run prospector -s high

  build:
    name: Build package
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: dschep/install-pipenv-action@v1
      - uses: ./.github/actions/setup-ci
      - name: Compile messages
        run: pipenv run ./manage.py compilemessages
      - name: Lock requirements
        run: pipenv lock --requirements > requirements.txt
      - name: Compile artifacts
        run: pipenv run python setup.py sdist
      - name: Store package dist files
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/
      - name: Store requirements
        uses: actions/upload-artifact@v2
        with:
          name: requirements
          path: requirements.txt

  deploy:
    name: Deploy docker container
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    environment: staging
    needs:
      - test
      - analyze
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Download package dist files
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Download requirements
        uses: actions/download-artifact@v2
        with:
          name: requirements
      - name: Validate deploy configuration
        uses: ansible/ansible-lint-action@master
        with:
          targets: deploy.yml
      - name: Configure SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Deploy docker container
        env:
          DJANGO_ENVIRONMENT: staging
        run: |
          echo -e "[web]\n${{ secrets.DEPLOY_HOST }}\n" > inventory
          ansible-playbook deploy.yml -i inventory
  
  migrate:
    name: Migrate database
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    environment: staging
    needs:
      - test
      - analyze
      - build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: dschep/install-pipenv-action@v1
      - uses: ./.github/actions/setup-ci
      - name: Migrate database
        run: pipenv run ./manage.py migrate

  static:
    name: Deploy static files
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    environment: staging
    needs:
      - test
      - analyze
      - build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-${{ hashFiles('Pipfile.lock') }}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: dschep/install-pipenv-action@v1
      - uses: ./.github/actions/setup-ci
      - name: Collect static files
        run: pipenv run ./manage.py collectstatic --no-input
